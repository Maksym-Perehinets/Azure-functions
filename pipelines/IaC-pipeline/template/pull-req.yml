# this is template for PR
steps:
  - task: TerraformInstaller@1
    displayName: "Latest Version of terraform installation"
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      terraformVersion: 'latest'
  - task: TerraformTaskV4@4
    displayName: terraform init
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: 'terraform-backend'
      backendAzureRmResourceGroupName: 'ocr-remote-tf-back-end'
      backendAzureRmStorageAccountName: 'remotetfbac324r4njrf'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'

  # Select terraform workspace
  - task: Bash@3
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      targetType: inline
      script: terraform workspace new prod && terraform workspace select prod
  - task: Bash@3
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/dev')
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      targetType: inline
      script: terraform workspace new dev && terraform workspace select dev

  - task: TerraformTaskV4@4
    displayName: terraform validate
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      provider: 'azurerm'
      command: 'validate'
  - task: TerraformTaskV4@4
    displayName: terraform plan
    workingDirectory: '$(Build.SourcesDirectory)/IaC/main'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      environmentServiceNameAzureRM: 'Azure for Students (12c692a0-00e1-447a-8d87-2712018a0472)'
      commandOptions: >- 
                        -var="location=$(location)"
